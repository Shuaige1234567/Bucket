{"version":3,"file":"src_Bucket_assets_src_pages_File_jsx.index.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACgH;AACjB;AAC/F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,wDAAwD,oBAAoB,kBAAkB,uBAAuB,0BAA0B,yBAAyB,mBAAmB,kBAAkB,iBAAiB,GAAG,qBAAqB,uBAAuB,sBAAsB,yBAAyB,8BAA8B,GAAG,uBAAuB,uBAAuB,oBAAoB,kCAAkC,GAAG,0BAA0B,gBAAgB,iBAAiB,GAAG,yCAAyC,qBAAqB,GAAG,cAAc,gBAAgB,uBAAuB,GAAG,kCAAkC,4BAA4B,GAAG,eAAe,gBAAgB,iBAAiB,iBAAiB,uBAAuB,GAAG,uGAAuG,eAAe,GAAG,WAAW,uBAAuB,iBAAiB,GAAG,SAAS,oGAAoG,UAAU,UAAU,YAAY,aAAa,aAAa,WAAW,UAAU,UAAU,KAAK,KAAK,YAAY,aAAa,aAAa,aAAa,MAAM,KAAK,YAAY,WAAW,YAAY,OAAO,KAAK,UAAU,UAAU,KAAK,KAAK,YAAY,MAAM,KAAK,UAAU,YAAY,MAAM,KAAK,YAAY,MAAM,KAAK,UAAU,UAAU,UAAU,YAAY,MAAM,OAAO,UAAU,KAAK,KAAK,YAAY,WAAW,uCAAuC,oBAAoB,kBAAkB,uBAAuB,0BAA0B,yBAAyB,mBAAmB,kBAAkB,iBAAiB,GAAG,qBAAqB,uBAAuB,sBAAsB,yBAAyB,8BAA8B,GAAG,uBAAuB,uBAAuB,oBAAoB,kCAAkC,GAAG,0BAA0B,gBAAgB,iBAAiB,GAAG,yCAAyC,qBAAqB,GAAG,cAAc,gBAAgB,uBAAuB,GAAG,kCAAkC,4BAA4B,GAAG,eAAe,gBAAgB,iBAAiB,iBAAiB,uBAAuB,GAAG,uGAAuG,eAAe,GAAG,WAAW,uBAAuB,iBAAiB,GAAG,qBAAqB;AAC55E;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNvC,MAAqG;AACrG,MAA2F;AAC3F,MAAkG;AAClG,MAAqH;AACrH,MAA8G;AAC9G,MAA8G;AAC9G,MAAwG;AACxG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,qFAAO;;;;AAIkD;AAC1E,OAAO,iEAAe,qFAAO,IAAI,4FAAc,GAAG,4FAAc,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Bb;AACnB;AACV;AACH;AACqD;AAC9B;AACb;AACX;AAC/B,QAAQ,UAAU,EAAE,4CAAM;AACnB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAAQ;AAClC,wCAAwC,+CAAQ;AAChD,YAAY,iCAAiC,EAAE,wDAAW;AAC1D;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA,oBAAoB,8CAAM;AAC1B;AACA;AACA;AACA,mBAAmB,kDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,qCAAqC;AACrC,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA,0BAA0B,oDAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAM;AACpC;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAa,IAAI,SAAS;AAClD;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA,4BAA4B,8CAAM;AAClC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oBAAoB,kDAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,YAAY,oDAAe;AAC3B;AACA;AACA,YAAY,kDAAa;AACzB;AACA;AACA;AACA,QAAQ,kDAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B,gDAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAmB,CAAC,4CAAG,IAAI,mBAAmB,8CAAM,IAAI;AAChF,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oCAAoC,gDAAmB,CAAC,4CAAK,IAAI,gBAAgB;AACjF,gBAAgB,gDAAmB,CAAC,6CAAM,IAAI,gDAAgD;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B,EAAE,2DAAW,GAAG,QAAQ;AAClE,YAAY,gDAAmB,CAAC,6CAAI,IAAI,qCAAqC;AAC7E,QAAQ,gDAAmB,YAAY,SAAS,8BAA8B,qBAAqB;AACnG,YAAY,gDAAmB,UAAU,wBAAwB;AACjE,gBAAgB,gDAAmB,UAAU,oBAAoB;AACjE,oBAAoB,gDAAmB;AACvC,wBAAwB,gDAAmB,UAAU,sCAAsC;AAC3F,4BAA4B,gDAAmB,YAAY,oBAAoB;AAC/E,4BAA4B,gDAAmB,UAAU,wBAAwB;AACjF,gCAAgC,gDAAmB;AACnD,oCAAoC,gDAAmB,CAAC,0DAAkB,IAAI,mBAAmB;AACjG,gCAAgC,gDAAmB;AACnD,gBAAgB,gDAAmB,CAAC,6CAAK,IAAI,mHAAmH,yBAAyB,uBAAuB;AAChN,gBAAgB,gDAAmB,UAAU,yBAAyB;AACtE,oBAAoB,gDAAmB,CAAC,4CAAK,IAAI,SAAS,sDAAsD,uCAAuC;AACvJ,wBAAwB,gDAAmB,CAAC,6CAAU,IAAI,qHAAqH;AAC/K,4BAA4B,gDAAmB,CAAC,6CAAM,IAAI,iBAAiB;AAC3E;AACA,iEAAe,OAAO,EAAC","sources":["webpack://Container_assets/./src/Bucket_assets/assets/File.css","webpack://Container_assets/./src/Bucket_assets/assets/File.css?63fd","webpack://Container_assets/./src/Bucket_assets/src/pages/File.jsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".title .drop {\\n  cursor: pointer;\\n  width: 1000px;\\n  border-radius: 2px;\\n  border-color: #eeeeee;\\n  border-style: dashed;\\n  color: #bdbdbd;\\n  outline: none;\\n  margin: auto;\\n}\\n.title .uploadBac {\\n  position: relative;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  background-color: #fafafc;\\n}\\n.title .uploadBac p {\\n  text-align: center;\\n  font-size: 20px;\\n  margin-bottom: 0px !important;\\n}\\n\\n.uploadBac .icon svg {\\n  width: 35px;\\n  height: 35px;\\n}\\n.fileTable .ant-table-tbody > tr > td {\\n  max-width: 300px;\\n}\\n.showTable {\\n  width: 100%;\\n  position: relative;\\n}\\n.showTable .ant-spin-container {\\n  transition: all 2s ease;\\n}\\n.action_bac {\\n  width: 100%;\\n  height: 32px;\\n  bottom: 15px;\\n  position: absolute;\\n}\\n.showTable .ant-pagination-prev,\\n.showTable .ant-pagination-next,\\n.showTable .ant-pagination-item {\\n  z-index: 1;\\n}\\n.Action {\\n  position: absolute;\\n  right: 200px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Bucket_assets/assets/File.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;EACf,aAAa;EACb,kBAAkB;EAClB,qBAAqB;EACrB,oBAAoB;EACpB,cAAc;EACd,aAAa;EACb,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,oBAAoB;EACpB,yBAAyB;AAC3B;AACA;EACE,kBAAkB;EAClB,eAAe;EACf,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,kBAAkB;AACpB;AACA;;;EAGE,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,YAAY;AACd\",\"sourcesContent\":[\".title .drop {\\n  cursor: pointer;\\n  width: 1000px;\\n  border-radius: 2px;\\n  border-color: #eeeeee;\\n  border-style: dashed;\\n  color: #bdbdbd;\\n  outline: none;\\n  margin: auto;\\n}\\n.title .uploadBac {\\n  position: relative;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  background-color: #fafafc;\\n}\\n.title .uploadBac p {\\n  text-align: center;\\n  font-size: 20px;\\n  margin-bottom: 0px !important;\\n}\\n\\n.uploadBac .icon svg {\\n  width: 35px;\\n  height: 35px;\\n}\\n.fileTable .ant-table-tbody > tr > td {\\n  max-width: 300px;\\n}\\n.showTable {\\n  width: 100%;\\n  position: relative;\\n}\\n.showTable .ant-spin-container {\\n  transition: all 2s ease;\\n}\\n.action_bac {\\n  width: 100%;\\n  height: 32px;\\n  bottom: 15px;\\n  position: absolute;\\n}\\n.showTable .ant-pagination-prev,\\n.showTable .ant-pagination-next,\\n.showTable .ant-pagination-item {\\n  z-index: 1;\\n}\\n.Action {\\n  position: absolute;\\n  right: 200px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./File.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./File.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { sha256 } from \"js-sha256\";\nimport { nanoid } from \"nanoid\";\nimport { Button, Layout, message, Popconfirm, Space, Table, Tag, Spin, } from \"antd\";\nimport { MedicineBoxTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport \"../../assets/File.css\";\nconst { Content } = Layout;\nexport const getReverseFileExtension = (type) => {\n    switch (Object.keys(type)[0]) {\n        case \"jpeg\":\n            return \"image/jpeg\";\n        case \"gif\":\n            return \"image/gif\";\n        case \"jpg\":\n            return \"image/jpg\";\n        case \"png\":\n            return \"image/png\";\n        case \"svg\":\n            return \"image/svg\";\n        case \"avi\":\n            return \"video/avi\";\n        case \"mp4\":\n            return \"video/mp4\";\n        case \"aac\":\n            return \"video/aac\";\n        case \"wav\":\n            return \"audio/wav\";\n        case \"mp3\":\n            return \"audio/mp3\";\n        case \"wasm\":\n            return \"application/wasm\";\n        default:\n            return \"\";\n    }\n};\nconst getFileExtension = (type) => {\n    switch (type) {\n        case \"image/jpeg\":\n            return { jpeg: null };\n        case \"image/gif\":\n            return { gif: null };\n        case \"image/jpg\":\n            return { jpg: null };\n        case \"image/png\":\n            return { png: null };\n        case \"image/svg\":\n            return { svg: null };\n        case \"video/avi\":\n            return { avi: null };\n        case \"video/aac\":\n            return { aac: null };\n        case \"video/mp4\":\n            return { mp4: null };\n        case \"audio/wav\":\n            return { wav: null };\n        case \"audio/mp3\":\n            return { mp3: null };\n        case \"audio/mpeg\":\n            return { mp3: null };\n        case \"application/wasm\":\n            return { wasm: null };\n        default:\n            return null;\n    }\n};\nlet newData = [];\nlet arrString = \"\";\nlet isUpload = false;\nlet uploadFileNumber = 0;\nlet flag = true;\nlet playupFlag = true;\nlet selectedRows = [];\nconst deletePromise = [];\nfunction allFile() {\n    const [key, setkey] = useState(\"\");\n    const [isSpinning, setIsSpinning] = useState(false);\n    const { principal, assets, bucketActor } = useSelector((state) => state);\n    const storageKey = principal.value;\n    let localStor = JSON.parse(localStorage.getItem(storageKey));\n    const localBuffer = localStor === null ? [] : localStor;\n    const assetExts = assets === null ? [] : assets.ok;\n    if (localBuffer.length < assetExts.length && flag) {\n        for (let i = 0; i < assetExts.length; i++) {\n            localBuffer[i] = {\n                filekey: assetExts[i].file_key,\n                bucketId: assetExts[i].bucket_id.toString(),\n                filename: assetExts[i].file_name,\n                filetype: [Object.keys(assetExts[i].file_extension)[0]],\n                id: nanoid(),\n            };\n        }\n    }\n    const onDrop = useCallback((acceptedFiles) => {\n        let allPromises = [];\n        let allChunks = 0;\n        uploadFileNumber = acceptedFiles.length;\n        // Do something with the files\n        console.log(acceptedFiles);\n        let total_size = 0;\n        for (let i = 0; i < acceptedFiles.length; i++) {\n            const file = acceptedFiles[i];\n            let fileKey = \"\";\n            const digestTree = [];\n            const dataArr = [];\n            const tmpArr = [];\n            let fileSize = file.size; // 文件大小\n            total_size += fileSize;\n            console.log(\"fileSize:\", fileSize);\n            let chunkSize = 1992295; // 切片的大小\n            let chunks = Math.ceil(fileSize / chunkSize); // 获取切片的个数\n            console.log(\"chunks:\", chunks);\n            let blobSlice = //\n             File.prototype.slice ||\n                File.prototype.mozSlice ||\n                File.prototype.webkitSlice;\n            let currentChunk = 0;\n            const chunkPromises = [];\n            const reader = new FileReader();\n            let file_extension = getFileExtension(file.type);\n            // fileType = Object.keys(file_extension)[0];\n            reader.onload = function (e) {\n                console.log(\"333\");\n                let result = e.target.result;\n                let tData = new Uint8Array(result);\n                let data = [];\n                for (let i = 0; i < tData.length; i++) {\n                    data.push(tData[i]);\n                }\n                let tmp = sha256.digest(data);\n                tmpArr.push(tmp);\n                dataArr.push(data);\n                digestTree.push(...tmp);\n                currentChunk++;\n                if (currentChunk < chunks) {\n                    loadNext();\n                }\n                else {\n                    // let root = sha256.digest(digestTree);\n                    fileKey = sha256(digestTree);\n                    // digestTree.splice(0, 0, ...root);\n                    fileKey = fileKey.toUpperCase();\n                    let isRepeat = localBuffer.find((item) => item.filekey === fileKey);\n                    if (isRepeat) {\n                        uploadFileNumber--;\n                        message.error(`${fileKey} is Repeat`);\n                    }\n                    else {\n                        isUpload = true;\n                        // setkey({});\n                        setIsSpinning(true);\n                        console.log(\"ok\");\n                        for (let i = 0; i < dataArr.length; i++) {\n                            console.log(fileKey);\n                            chunkPromises.push(bucketActor.put({\n                                file_key: fileKey,\n                                file_name: file.name,\n                                file_extension: file_extension,\n                                chunk: { digest: tmpArr[i], data: dataArr[i] },\n                                chunk_number: chunks,\n                                order: i,\n                            }));\n                        }\n                        allPromises.push(...chunkPromises);\n                        if (allPromises.length === allChunks) {\n                            Promise.all(allPromises).then();\n                        }\n                    }\n                }\n            };\n            const loadNext = () => {\n                console.log(\"222222\");\n                let start = currentChunk * chunkSize;\n                let end = start + chunkSize > fileSize ? fileSize : start + chunkSize;\n                reader.readAsArrayBuffer(blobSlice.call(file, start, end));\n            };\n            loadNext();\n        }\n    }, [localBuffer, bucketActor]);\n    const turn = (preLength) => {\n        return async () => {\n            const arr = [];\n            let local = JSON.parse(localStorage.getItem(storageKey));\n            const localArr = local === null ? [] : local;\n            let x = await bucketActor.getAssetExts();\n            console.log(x.ok, localArr.length);\n            if (x.ok.length > localArr.length) {\n                for (let i = 0; i < x.ok.length; i++) {\n                    arr.push({\n                        id: nanoid(),\n                        filename: x.ok[i].file_name,\n                        bucketId: x.ok[i].bucket_id.toString(),\n                        filekey: x.ok[i].file_key,\n                        filetype: [Object.keys(x.ok[i].file_extension)[0]],\n                    });\n                }\n            }\n            let kkk = JSON.stringify(arr);\n            if (arr.length > 0 && storageKey !== \"\") {\n                playupFlag = false;\n                localStorage.setItem(storageKey, kkk);\n                setkey({});\n            }\n            if (x.ok.length === preLength + uploadFileNumber) {\n                console.log(\"上传完成\");\n                console.log(x.ok);\n                location.reload();\n                return 0;\n            }\n        };\n    };\n    if (isUpload && playupFlag) {\n        console.log(\"!!!!\");\n        let local = JSON.parse(localStorage.getItem(storageKey));\n        const localArr = local === null ? [] : local;\n        setInterval(turn(localArr.length), 1000);\n    }\n    useEffect(() => {\n        return () => {\n            Promise.all(deletePromise).then(() => {\n                console.log(\"deleted\");\n            });\n        };\n    });\n    const loadImg = async (key) => {\n        console.log(key);\n        let re = await bucketActor.getAssetExtkey(key);\n        console.log(\"RE\", re);\n        let chunks = Number(re.ok.need_query_times);\n        console.log(chunks);\n        let file = [];\n        for (let i = 0; i < chunks; i++) {\n            let reFile = await bucketActor.get({\n                file_key: key,\n                flag: i,\n            });\n            console.log(i);\n            console.log(reFile);\n            let tmp = reFile.ok[0];\n            for (let i = 1; i < reFile.ok.length; i++)\n                tmp = tmp.concat(reFile.ok[i]);\n            file = file.concat(tmp);\n        }\n        console.log(file);\n        let ff = new Uint8Array(file).buffer;\n        console.log(ff);\n        let file_type = getReverseFileExtension(re.ok.file_extension);\n        const blob = new Blob([ff], {\n            type: file_type,\n        });\n        console.log(blob);\n        // console.log(sha256(blob).words);\n        return URL.createObjectURL(blob);\n    };\n    const skip = (key) => {\n        return async () => {\n            setIsSpinning(true);\n            loadImg(key).then((url) => {\n                if (url) {\n                    setIsSpinning(false);\n                    window.open(`${url}`);\n                }\n            });\n        };\n    };\n    const confirm = async () => {\n        console.log(selectedRows);\n        if (selectedRows.length > 0) {\n            const newBuffer = JSON.parse(localStorage.getItem(storageKey));\n            for (let i = 0; i < selectedRows.length; i++) {\n                deletePromise.push(bucketActor.deletekey(selectedRows[i].filekey));\n                let index = newBuffer.findIndex((item) => {\n                    return selectedRows[i].filekey === item.filekey;\n                });\n                if (index !== -1) {\n                    newBuffer.splice(index, 1);\n                }\n                else {\n                    message.error(\"Please select the file to delete!\");\n                    return 0;\n                }\n            }\n            console.log(newBuffer);\n            const newStorage = JSON.stringify(newBuffer);\n            if (storageKey !== \"\")\n                localStorage.setItem(storageKey, newStorage);\n            flag = false;\n            selectedRows = [];\n            setkey({});\n            message.success(\"Deleted successded\");\n        }\n        else {\n            message.error(\"Please select the file to delete!\");\n        }\n    };\n    const cancel = () => {\n        message.error(\"Cancel deletion\");\n    };\n    const onSelectChange = (_, Rows) => {\n        console.log(Rows);\n        selectedRows = Rows;\n    };\n    const rowSelection = {\n        onChange: onSelectChange,\n    };\n    const columns = [\n        {\n            title: \"FileName\",\n            dataIndex: \"filename\",\n        },\n        {\n            title: \"BucketId\",\n            dataIndex: \"bucketId\",\n        },\n        {\n            title: \"FileKey\",\n            dataIndex: \"filekey\",\n        },\n        {\n            title: \"FileType\",\n            dataIndex: \"filetype\",\n            render: (tags) => (React.createElement(\"span\", null, tags.map((tag) => {\n                let color;\n                switch (tag) {\n                    case \"mp3\":\n                    case \"wav\":\n                        color = \"volcano\";\n                        break;\n                    case \"acc\":\n                    case \"mp4\":\n                    case \"avi\":\n                        color = \"geekblue\";\n                        break;\n                    default:\n                        color = \"magenta\";\n                        break;\n                }\n                return (React.createElement(Tag, { color: color, key: nanoid() }, tag));\n            }))),\n        },\n        {\n            title: \"Action\",\n            key: \"action\",\n            render: (_, record) => (React.createElement(Space, { size: \"middle\" },\n                React.createElement(Button, { type: \"primary\", onClick: skip(record.filekey) }, \"Entry\"))),\n        },\n    ];\n    // localStorage.removeItem(\"ic-identity\");\n    // localStorage.removeItem(\"ic-delegation\");\n    // localStorage.removeItem(\n    //   \"eniwd-yttfc-vdnj4-4rx5q-6tnr5-g2hxx-2dfcx-6pbcc-xbrg2-oivre-4ae\"\n    // );\n    newData = [...localBuffer];\n    arrString = JSON.stringify(newData);\n    if (newData.length > 0 && storageKey !== \"\")\n        localStorage.setItem(storageKey, arrString);\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\n    return (React.createElement(Spin, { spinning: isSpinning, size: \"large\" },\n        React.createElement(Content, { style: { padding: \"0 0\", minHeight: 0 }, className: \"main\" },\n            React.createElement(\"div\", { className: \"showTable\" },\n                React.createElement(\"div\", { className: \"title\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(\"div\", { className: \"drop\", ...getRootProps() },\n                            React.createElement(\"input\", { ...getInputProps() }),\n                            React.createElement(\"div\", { className: \"uploadBac\" },\n                                React.createElement(\"p\", null,\n                                    React.createElement(MedicineBoxTwoTone, { className: \"icon\" })),\n                                React.createElement(\"p\", null, \"Click one or drag many files to this area to upload\"))))),\n                React.createElement(Table, { className: \"fileTable\", rowSelection: rowSelection, rowKey: (record) => record.id, columns: columns, pagination: { position: \"bottomRight\" }, dataSource: newData }),\n                React.createElement(\"div\", { className: \"action_bac\" },\n                    React.createElement(Space, { style: { display: newData.length > 0 ? \"inline-flex\" : \"none\" }, size: \"middle\", className: \"Action\" },\n                        React.createElement(Popconfirm, { title: \"Are you sure to delete these files?\", onConfirm: confirm, onCancel: cancel, okText: \"Yes\", cancelText: \"No\" },\n                            React.createElement(Button, { type: \"primary\" }, \"Delete\"))))))));\n}\nexport default allFile;\n"],"names":[],"sourceRoot":""}